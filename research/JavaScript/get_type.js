
console.log( effcore.getType( 100               ) === 'Number' );
console.log( effcore.getType( 3.14              ) === 'Number' );
console.log( effcore.getType( Math.LN2          ) === 'Number' );
console.log( effcore.getType( Infinity          ) === 'Number' );
console.log( effcore.getType( NaN               ) === 'Number' );
console.log( effcore.getType( new Number(1)     ) === 'Number' );
console.log( effcore.getType(     Number(1)     ) === 'Number' );
console.log( effcore.getType( 1234567890n       ) === 'BigInt' );
console.log( effcore.getType( ''                ) === 'String' );
console.log( effcore.getType( 'text'            ) === 'String' );
console.log( effcore.getType( '0'               ) === 'String' );
console.log( effcore.getType( '1'               ) === 'String' );
console.log( effcore.getType( new String('')    ) === 'String' );
console.log( effcore.getType(     String('')    ) === 'String' );
console.log( effcore.getType( 'true'            ) === 'String' );
console.log( effcore.getType( 'false'           ) === 'String' );
console.log( effcore.getType( true              ) === 'Boolean' );
console.log( effcore.getType( false             ) === 'Boolean' );
console.log( effcore.getType( new Boolean(true) ) === 'Boolean' );
console.log( effcore.getType(     Boolean(true) ) === 'Boolean' );
console.log( effcore.getType( Symbol()          ) === 'Symbol' );
console.log( effcore.getType( Symbol('text')    ) === 'Symbol' );
console.log( effcore.getType( Symbol.iterator   ) === 'Symbol' );
console.log( effcore.getType( function(){}      ) === 'Function');
console.log( effcore.getType( Math.sin          ) === 'Function');
console.log( effcore.getType( null              ) === 'Null');
console.log( effcore.getType(  undefined        ) === 'Undefined');
console.log( effcore.getType( 'undefined'       ) === 'String');
console.log( effcore.getType( new Date()        ) === 'Date' );
console.log( effcore.getType(     Date()        ) === 'String' );
console.log( effcore.getType( /s/               ) === 'RegExp' );
console.log( effcore.getType( new RegExp('')    ) === 'RegExp' );
console.log( effcore.getType(     RegExp('')    ) === 'RegExp' );
console.log( effcore.getType( {}                ) === 'Object' );
console.log( effcore.getType( new Object()      ) === 'Object' );
console.log( effcore.getType(     Object()      ) === 'Object' );
console.log( effcore.getType( []                ) === 'Array' );
console.log( effcore.getType( new Array()       ) === 'Array' );
console.log( effcore.getType(     Array()       ) === 'Array' );
console.log( effcore.getType( document.all      ) === 'HTMLAllCollection');

console.log( Object.prototype.toString.call( 100               ) === '[object Number]' );
console.log( Object.prototype.toString.call( 3.14              ) === '[object Number]' );
console.log( Object.prototype.toString.call( Math.LN2          ) === '[object Number]' );
console.log( Object.prototype.toString.call( Infinity          ) === '[object Number]' );
console.log( Object.prototype.toString.call( NaN               ) === '[object Number]' );
console.log( Object.prototype.toString.call( new Number(1)     ) === '[object Number]' );
console.log( Object.prototype.toString.call(     Number(1)     ) === '[object Number]' );
console.log( Object.prototype.toString.call( 1234567890n       ) === '[object BigInt]' );
console.log( Object.prototype.toString.call( ''                ) === '[object String]' );
console.log( Object.prototype.toString.call( 'text'            ) === '[object String]' );
console.log( Object.prototype.toString.call( '0'               ) === '[object String]' );
console.log( Object.prototype.toString.call( '1'               ) === '[object String]' );
console.log( Object.prototype.toString.call( new String('')    ) === '[object String]' );
console.log( Object.prototype.toString.call(     String('')    ) === '[object String]' );
console.log( Object.prototype.toString.call( 'true'            ) === '[object String]' );
console.log( Object.prototype.toString.call( 'false'           ) === '[object String]' );
console.log( Object.prototype.toString.call( true              ) === '[object Boolean]' );
console.log( Object.prototype.toString.call( false             ) === '[object Boolean]' );
console.log( Object.prototype.toString.call( new Boolean(true) ) === '[object Boolean]' );
console.log( Object.prototype.toString.call(     Boolean(true) ) === '[object Boolean]' );
console.log( Object.prototype.toString.call( Symbol()          ) === '[object Symbol]' );
console.log( Object.prototype.toString.call( Symbol('text')    ) === '[object Symbol]' );
console.log( Object.prototype.toString.call( Symbol.iterator   ) === '[object Symbol]' );
console.log( Object.prototype.toString.call( function(){}      ) === '[object Function]');
console.log( Object.prototype.toString.call( Math.sin          ) === '[object Function]');
console.log( Object.prototype.toString.call( null              ) === '[object Null]');
console.log( Object.prototype.toString.call(  undefined        ) === '[object Undefined]');
console.log( Object.prototype.toString.call( 'undefined'       ) === '[object String]');
console.log( Object.prototype.toString.call( new Date()        ) === '[object Date]' );
console.log( Object.prototype.toString.call(     Date()        ) === '[object String]' );
console.log( Object.prototype.toString.call( /s/               ) === '[object RegExp]' );
console.log( Object.prototype.toString.call( new RegExp('')    ) === '[object RegExp]' );
console.log( Object.prototype.toString.call(     RegExp('')    ) === '[object RegExp]' );
console.log( Object.prototype.toString.call( {}                ) === '[object Object]' );
console.log( Object.prototype.toString.call( new Object()      ) === '[object Object]' );
console.log( Object.prototype.toString.call(     Object()      ) === '[object Object]' );
console.log( Object.prototype.toString.call( []                ) === '[object Array]' );
console.log( Object.prototype.toString.call( new Array()       ) === '[object Array]' );
console.log( Object.prototype.toString.call(     Array()       ) === '[object Array]' );
console.log( Object.prototype.toString.call( document.all      ) === '[object HTMLAllCollection]');

console.log( Array.isArray( 100               ) === false );
console.log( Array.isArray( 3.14              ) === false );
console.log( Array.isArray( Math.LN2          ) === false );
console.log( Array.isArray( Infinity          ) === false );
console.log( Array.isArray( NaN               ) === false );
console.log( Array.isArray( new Number(1)     ) === false );
console.log( Array.isArray(     Number(1)     ) === false );
console.log( Array.isArray( ''                ) === false );
console.log( Array.isArray( 'text'            ) === false );
console.log( Array.isArray( '0'               ) === false );
console.log( Array.isArray( '1'               ) === false );
console.log( Array.isArray( new String('')    ) === false );
console.log( Array.isArray(     String('')    ) === false );
console.log( Array.isArray( 'true'            ) === false );
console.log( Array.isArray( 'false'           ) === false );
console.log( Array.isArray( true              ) === false );
console.log( Array.isArray( false             ) === false );
console.log( Array.isArray( new Boolean(true) ) === false );
console.log( Array.isArray(     Boolean(true) ) === false );
console.log( Array.isArray( Symbol()          ) === false );
console.log( Array.isArray( Symbol('text')    ) === false );
console.log( Array.isArray( Symbol.iterator   ) === false );
console.log( Array.isArray( function(){}      ) === false );
console.log( Array.isArray( Math.sin          ) === false );
console.log( Array.isArray( null              ) === false );
console.log( Array.isArray(  undefined        ) === false );
console.log( Array.isArray( 'undefined'       ) === false );
console.log( Array.isArray( new Date()        ) === false );
console.log( Array.isArray(     Date()        ) === false );
console.log( Array.isArray( /s/               ) === false );
console.log( Array.isArray( new RegExp('')    ) === false );
console.log( Array.isArray(     RegExp('')    ) === false );
console.log( Array.isArray( {}                ) === false );
console.log( Array.isArray( new Object()      ) === false );
console.log( Array.isArray(     Object()      ) === false );
console.log( Array.isArray( []                ) === true  );
console.log( Array.isArray( new Array()       ) === true  );
console.log( Array.isArray(     Array()       ) === true  );
console.log( Array.isArray( document.all      ) === false );
